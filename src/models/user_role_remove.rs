/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserRoleRemove {
    /// the role that will be unassigned (accepts either the role id or the role key)
    #[serde(rename = "role")]
    pub role: String,
    /// the tenant the role is associated with (accepts either the tenant id or the tenant key)
    #[serde(rename = "tenant", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<String>,
    /// the resource instance the role is associated with (accepts either the resource instance id or key using this format resource_type:resource_instance)
    #[serde(rename = "resource_instance", skip_serializing_if = "Option::is_none")]
    pub resource_instance: Option<String>,
}

impl UserRoleRemove {
    pub fn new(role: String) -> UserRoleRemove {
        UserRoleRemove {
            role,
            tenant: None,
            resource_instance: None,
        }
    }
}

