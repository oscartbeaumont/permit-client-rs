/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentStatistics {
    #[serde(rename = "roles")]
    pub roles: i32,
    #[serde(rename = "users")]
    pub users: i32,
    #[serde(rename = "policies")]
    pub policies: i32,
    #[serde(rename = "resources")]
    pub resources: i32,
    #[serde(rename = "tenants")]
    pub tenants: i32,
    #[serde(rename = "has_decision_logs")]
    pub has_decision_logs: bool,
    #[serde(rename = "members")]
    pub members: Vec<models::OrgMemberReadWithGrants>,
    #[serde(rename = "mau")]
    pub mau: i32,
}

impl EnvironmentStatistics {
    pub fn new(roles: i32, users: i32, policies: i32, resources: i32, tenants: i32, has_decision_logs: bool, members: Vec<models::OrgMemberReadWithGrants>, mau: i32) -> EnvironmentStatistics {
        EnvironmentStatistics {
            roles,
            users,
            policies,
            resources,
            tenants,
            has_decision_logs,
            members,
            mau,
        }
    }
}

