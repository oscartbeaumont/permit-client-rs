/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserRead {
    /// A unique id by which Permit will identify the user for permission checks.
    #[serde(rename = "key")]
    pub key: String,
    /// Unique id of the user
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Unique id of the organization that the user belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the user belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Unique id of the environment that the user belongs to.
    #[serde(rename = "environment_id")]
    pub environment_id: uuid::Uuid,
    #[serde(rename = "associated_tenants", skip_serializing_if = "Option::is_none")]
    pub associated_tenants: Option<Vec<models::UserInTenant>>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<models::UserRole>>,
    /// The email of the user. If synced, will be unique inside the environment.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// First name of the user.
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// Last name of the user.
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// Arbitrary user attributes that will be used to enforce attribute-based access control policies.
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<serde_json::Value>,
}

impl UserRead {
    pub fn new(key: String, id: uuid::Uuid, organization_id: uuid::Uuid, project_id: uuid::Uuid, environment_id: uuid::Uuid) -> UserRead {
        UserRead {
            key,
            id,
            organization_id,
            project_id,
            environment_id,
            associated_tenants: None,
            roles: None,
            email: None,
            first_name: None,
            last_name: None,
            attributes: None,
        }
    }
}

