/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResourceAttributeRead {
    /// The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.
    #[serde(rename = "type")]
    pub r#type: models::AttributeType,
    /// An optional longer description of what this attribute respresents in your system
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.
    #[serde(rename = "key")]
    pub key: String,
    /// Unique id of the attribute
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Unique id of the resource that the attribute belongs to.
    #[serde(rename = "resource_id")]
    pub resource_id: uuid::Uuid,
    /// A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.
    #[serde(rename = "resource_key")]
    pub resource_key: String,
    /// Unique id of the organization that the attribute belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the attribute belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Unique id of the environment that the attribute belongs to.
    #[serde(rename = "environment_id")]
    pub environment_id: uuid::Uuid,
    /// Date and time when the attribute was created (ISO_8601 format).
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// Date and time when the attribute was last updated/modified (ISO_8601 format).
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    /// Whether the attribute is built-in, and managed by the Permit system.
    #[serde(rename = "built_in")]
    pub built_in: bool,
}

impl ResourceAttributeRead {
    pub fn new(r#type: models::AttributeType, key: String, id: uuid::Uuid, resource_id: uuid::Uuid, resource_key: String, organization_id: uuid::Uuid, project_id: uuid::Uuid, environment_id: uuid::Uuid, created_at: String, updated_at: String, built_in: bool) -> ResourceAttributeRead {
        ResourceAttributeRead {
            r#type,
            description: None,
            key,
            id,
            resource_id,
            resource_key,
            organization_id,
            project_id,
            environment_id,
            created_at,
            updated_at,
            built_in,
        }
    }
}

