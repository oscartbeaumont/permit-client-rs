/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConditionSetRuleRead {
    /// Unique id of the condition set rule
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// A unique id by which Permit will identify this condition set rule.
    #[serde(rename = "key")]
    pub key: String,
    /// the userset that is currently granted permissions, i.e: all the users matching this rule are granted the permission on the resourceset
    #[serde(rename = "user_set")]
    pub user_set: String,
    /// a permission that is currently granted to the userset *on* the resourceset.
    #[serde(rename = "permission")]
    pub permission: String,
    /// the resourceset that represents the resources that are currently granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*
    #[serde(rename = "resource_set")]
    pub resource_set: String,
    /// Unique id of the organization that the condition set rule belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the condition set rule belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Unique id of the environment that the condition set rule belongs to.
    #[serde(rename = "environment_id")]
    pub environment_id: uuid::Uuid,
    /// Date and time when the condition set rule was created (ISO_8601 format).
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// Date and time when the condition set rule was last updated/modified (ISO_8601 format).
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl ConditionSetRuleRead {
    pub fn new(id: uuid::Uuid, key: String, user_set: String, permission: String, resource_set: String, organization_id: uuid::Uuid, project_id: uuid::Uuid, environment_id: uuid::Uuid, created_at: String, updated_at: String) -> ConditionSetRuleRead {
        ConditionSetRuleRead {
            id,
            key,
            user_set,
            permission,
            resource_set,
            organization_id,
            project_id,
            environment_id,
            created_at,
            updated_at,
        }
    }
}

