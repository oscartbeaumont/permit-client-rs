/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// AttributeType : supported attribute primitives
/// supported attribute primitives
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttributeType {
    #[serde(rename = "bool")]
    Bool,
    #[serde(rename = "number")]
    Number,
    #[serde(rename = "string")]
    String,
    #[serde(rename = "time")]
    Time,
    #[serde(rename = "array")]
    Array,
    #[serde(rename = "json")]
    Json,

}

impl ToString for AttributeType {
    fn to_string(&self) -> String {
        match self {
            Self::Bool => String::from("bool"),
            Self::Number => String::from("number"),
            Self::String => String::from("string"),
            Self::Time => String::from("time"),
            Self::Array => String::from("array"),
            Self::Json => String::from("json"),
        }
    }
}

impl Default for AttributeType {
    fn default() -> AttributeType {
        Self::Bool
    }
}

