/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccessRequestDetails {
    /// tenant id or key that the user is requesting access to
    #[serde(rename = "tenant")]
    pub tenant: String,
    /// resource id or key that the user is requesting access to
    #[serde(rename = "resource")]
    pub resource: String,
    /// resource instance id or key that the user is requesting access to
    #[serde(rename = "resource_instance", skip_serializing_if = "Option::is_none")]
    pub resource_instance: Option<String>,
    /// role id or key that the user is requesting access to
    #[serde(rename = "role")]
    pub role: String,
}

impl AccessRequestDetails {
    pub fn new(tenant: String, resource: String, role: String) -> AccessRequestDetails {
        AccessRequestDetails {
            tenant,
            resource,
            resource_instance: None,
            role,
        }
    }
}

