/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DerivedRoleBlockEdit {
    /// the settings of the derived role
    #[serde(rename = "when", skip_serializing_if = "Option::is_none")]
    pub when: Option<Box<models::DerivationSettings>>,
    /// the rules of the derived role
    #[serde(rename = "users_with_role", skip_serializing_if = "Option::is_none")]
    pub users_with_role: Option<Vec<models::DerivedRoleRuleCreate>>,
}

impl DerivedRoleBlockEdit {
    pub fn new() -> DerivedRoleBlockEdit {
        DerivedRoleBlockEdit {
            when: None,
            users_with_role: None,
        }
    }
}

