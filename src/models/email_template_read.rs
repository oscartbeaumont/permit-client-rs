/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmailTemplateRead {
    /// The type of the email template, can be either 'approval_flows' or 'user_management'
    #[serde(rename = "template_type")]
    pub template_type: models::EmailTemplateType,
    /// Unique id of the EmailTemplate
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Unique id of the organization that the EmailTemplate belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the EmailTemplate belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Unique id of the environment that the EmailTemplate belongs to.
    #[serde(rename = "environment_id")]
    pub environment_id: uuid::Uuid,
    /// The from address the mails will be sent from
    #[serde(rename = "from_address")]
    pub from_address: String,
    /// The redirect url the user will be redirected to after clicking the link in the email
    #[serde(rename = "redirect_to")]
    pub redirect_to: String,
    /// The time to live of the url in the email, in seconds
    #[serde(rename = "url_ttl")]
    pub url_ttl: String,
    /// The subject of the email template
    #[serde(rename = "subject")]
    pub subject: String,
    /// The messages of the email template
    #[serde(rename = "messages")]
    pub messages: Vec<models::EmailTemplateMessage>,
}

impl EmailTemplateRead {
    pub fn new(template_type: models::EmailTemplateType, id: uuid::Uuid, organization_id: uuid::Uuid, project_id: uuid::Uuid, environment_id: uuid::Uuid, from_address: String, redirect_to: String, url_ttl: String, subject: String, messages: Vec<models::EmailTemplateMessage>) -> EmailTemplateRead {
        EmailTemplateRead {
            template_type,
            id,
            organization_id,
            project_id,
            environment_id,
            from_address,
            redirect_to,
            url_ttl,
            subject,
            messages,
        }
    }
}

