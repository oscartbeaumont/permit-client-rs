/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RoleAssignmentRead {
    /// Unique id of the role assignment
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// the user the role is assigned to
    #[serde(rename = "user")]
    pub user: String,
    /// the role that is assigned
    #[serde(rename = "role")]
    pub role: String,
    /// the tenant the role is associated with
    #[serde(rename = "tenant", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<String>,
    /// the resource instance the role is associated with
    #[serde(rename = "resource_instance", skip_serializing_if = "Option::is_none")]
    pub resource_instance: Option<String>,
    /// Unique id of the resource instance
    #[serde(rename = "resource_instance_id", skip_serializing_if = "Option::is_none")]
    pub resource_instance_id: Option<uuid::Uuid>,
    /// Unique id of the user
    #[serde(rename = "user_id")]
    pub user_id: uuid::Uuid,
    /// Unique id of the role
    #[serde(rename = "role_id")]
    pub role_id: uuid::Uuid,
    /// Unique id of the tenant
    #[serde(rename = "tenant_id")]
    pub tenant_id: uuid::Uuid,
    /// Unique id of the organization that the role assignment belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the role assignment belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Unique id of the environment that the role assignment belongs to.
    #[serde(rename = "environment_id")]
    pub environment_id: uuid::Uuid,
    /// Date and time when the role assignment was created (ISO_8601 format).
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl RoleAssignmentRead {
    pub fn new(id: uuid::Uuid, user: String, role: String, user_id: uuid::Uuid, role_id: uuid::Uuid, tenant_id: uuid::Uuid, organization_id: uuid::Uuid, project_id: uuid::Uuid, environment_id: uuid::Uuid, created_at: String) -> RoleAssignmentRead {
        RoleAssignmentRead {
            id,
            user,
            role,
            tenant: None,
            resource_instance: None,
            resource_instance_id: None,
            user_id,
            role_id,
            tenant_id,
            organization_id,
            project_id,
            environment_id,
            created_at,
        }
    }
}

