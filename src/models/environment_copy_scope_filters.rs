/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentCopyScopeFilters {
    /// Objects to include (use * as wildcard)
    #[serde(rename = "include", skip_serializing_if = "Option::is_none")]
    pub include: Option<Vec<String>>,
    /// Object to exclude (use * as wildcard)
    #[serde(rename = "exclude", skip_serializing_if = "Option::is_none")]
    pub exclude: Option<Vec<String>>,
}

impl EnvironmentCopyScopeFilters {
    pub fn new() -> EnvironmentCopyScopeFilters {
        EnvironmentCopyScopeFilters {
            include: None,
            exclude: None,
        }
    }
}

