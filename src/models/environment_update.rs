/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentUpdate {
    /// The name of the environment
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// an optional longer description of the environment
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// when using gitops feature, an optional branch name for the environment
    #[serde(rename = "custom_branch_name", skip_serializing_if = "Option::is_none")]
    pub custom_branch_name: Option<String>,
    /// jwks for element frontend only login
    #[serde(rename = "jwks", skip_serializing_if = "Option::is_none")]
    pub jwks: Option<Box<models::JwksConfig>>,
    /// the settings for this environment
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<serde_json::Value>,
}

impl EnvironmentUpdate {
    pub fn new() -> EnvironmentUpdate {
        EnvironmentUpdate {
            name: None,
            description: None,
            custom_branch_name: None,
            jwks: None,
            settings: None,
        }
    }
}

