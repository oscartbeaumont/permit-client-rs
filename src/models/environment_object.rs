/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentObject {
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<serde_json::Value>,
    #[serde(rename = "key", deserialize_with = "Option::deserialize")]
    pub key: Option<serde_json::Value>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<serde_json::Value>>,
    #[serde(rename = "created_at", deserialize_with = "Option::deserialize")]
    pub created_at: Option<serde_json::Value>,
    #[serde(rename = "updated_at", deserialize_with = "Option::deserialize")]
    pub updated_at: Option<serde_json::Value>,
}

impl EnvironmentObject {
    pub fn new(id: Option<serde_json::Value>, key: Option<serde_json::Value>, created_at: Option<serde_json::Value>, updated_at: Option<serde_json::Value>) -> EnvironmentObject {
        EnvironmentObject {
            id,
            key,
            name: None,
            created_at,
            updated_at,
        }
    }
}

