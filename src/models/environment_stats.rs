/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentStats {
    /// A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.
    #[serde(rename = "key")]
    pub key: String,
    /// Unique id of the environment
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Unique id of the organization that the environment belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the environment belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Date and time when the environment was created (ISO_8601 format).
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// Date and time when the environment was last updated/modified (ISO_8601 format).
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    /// The name of the environment
    #[serde(rename = "name")]
    pub name: String,
    /// an optional longer description of the environment
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// when using gitops feature, an optional branch name for the environment
    #[serde(rename = "custom_branch_name", skip_serializing_if = "Option::is_none")]
    pub custom_branch_name: Option<String>,
    /// jwks for element frontend only login
    #[serde(rename = "jwks", skip_serializing_if = "Option::is_none")]
    pub jwks: Option<Box<models::JwksConfig>>,
    /// the settings for this environment
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<serde_json::Value>,
    #[serde(rename = "pdp_configs")]
    pub pdp_configs: Vec<models::PdpConfigRead>,
    #[serde(rename = "stats")]
    pub stats: Box<models::EnvironmentStatistics>,
}

impl EnvironmentStats {
    pub fn new(key: String, id: uuid::Uuid, organization_id: uuid::Uuid, project_id: uuid::Uuid, created_at: String, updated_at: String, name: String, pdp_configs: Vec<models::PdpConfigRead>, stats: models::EnvironmentStatistics) -> EnvironmentStats {
        EnvironmentStats {
            key,
            id,
            organization_id,
            project_id,
            created_at,
            updated_at,
            name,
            description: None,
            custom_branch_name: None,
            jwks: None,
            settings: None,
            pdp_configs,
            stats: Box::new(stats),
        }
    }
}

