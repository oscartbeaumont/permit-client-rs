/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LimitedPaginatedResultAuditLogModel {
    /// List of Audit Log Models
    #[serde(rename = "data")]
    pub data: Vec<models::AuditLogModel>,
    #[serde(rename = "total_count")]
    pub total_count: i32,
    #[serde(rename = "page_count", skip_serializing_if = "Option::is_none")]
    pub page_count: Option<i32>,
    #[serde(rename = "pagination_count")]
    pub pagination_count: i32,
}

impl LimitedPaginatedResultAuditLogModel {
    pub fn new(data: Vec<models::AuditLogModel>, total_count: i32, pagination_count: i32) -> LimitedPaginatedResultAuditLogModel {
        LimitedPaginatedResultAuditLogModel {
            data,
            total_count,
            page_count: None,
            pagination_count,
        }
    }
}

