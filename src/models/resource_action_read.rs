/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResourceActionRead {
    /// The name of the action
    #[serde(rename = "name")]
    pub name: String,
    /// An optional longer description of what this action respresents in your system
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<serde_json::Value>,
    /// A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.
    #[serde(rename = "key")]
    pub key: String,
    /// Unique id of the action
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// The name of the action, prefixed by the resource the action is acting upon.
    #[serde(rename = "permission_name")]
    pub permission_name: String,
    /// Unique id of the organization that the action belongs to.
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    /// Unique id of the project that the action belongs to.
    #[serde(rename = "project_id")]
    pub project_id: uuid::Uuid,
    /// Unique id of the environment that the action belongs to.
    #[serde(rename = "environment_id")]
    pub environment_id: uuid::Uuid,
    /// Unique id of the resource that the action belongs to.
    #[serde(rename = "resource_id")]
    pub resource_id: uuid::Uuid,
    /// Date and time when the action was created (ISO_8601 format).
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// Date and time when the action was last updated/modified (ISO_8601 format).
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl ResourceActionRead {
    pub fn new(name: String, key: String, id: uuid::Uuid, permission_name: String, organization_id: uuid::Uuid, project_id: uuid::Uuid, environment_id: uuid::Uuid, resource_id: uuid::Uuid, created_at: String, updated_at: String) -> ResourceActionRead {
        ResourceActionRead {
            name,
            description: None,
            attributes: None,
            key,
            id,
            permission_name,
            organization_id,
            project_id,
            environment_id,
            resource_id,
            created_at,
            updated_at,
        }
    }
}

