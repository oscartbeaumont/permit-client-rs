/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectUpdate {
    /// The name of the project
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// a longer description outlining the project objectives
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// the settings for this project
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<serde_json::Value>,
    /// the id of the policy repo to use for this project
    #[serde(rename = "active_policy_repo_id", skip_serializing_if = "Option::is_none")]
    pub active_policy_repo_id: Option<uuid::Uuid>,
}

impl ProjectUpdate {
    pub fn new() -> ProjectUpdate {
        ProjectUpdate {
            name: None,
            description: None,
            settings: None,
            active_policy_repo_id: None,
        }
    }
}

