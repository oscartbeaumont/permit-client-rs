/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmailTemplateMessage {
    /// The key of the message, can be either 'approval_flows_deny', 'approval_flows_approve', 'approval_flows_request'
    #[serde(rename = "message_type")]
    pub message_type: models::EmailMessageKeys,
    /// The value of the message
    #[serde(rename = "message_content")]
    pub message_content: String,
}

impl EmailTemplateMessage {
    pub fn new(message_type: models::EmailMessageKeys, message_content: String) -> EmailTemplateMessage {
        EmailTemplateMessage {
            message_type,
            message_content,
        }
    }
}

