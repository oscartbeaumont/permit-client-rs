/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Methods : An enumeration.
/// An enumeration.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Methods {
    #[serde(rename = "get")]
    Get,
    #[serde(rename = "post")]
    Post,
    #[serde(rename = "put")]
    Put,
    #[serde(rename = "patch")]
    Patch,
    #[serde(rename = "delete")]
    Delete,
    #[serde(rename = "head")]
    Head,
    #[serde(rename = "options")]
    Options,

}

impl ToString for Methods {
    fn to_string(&self) -> String {
        match self {
            Self::Get => String::from("get"),
            Self::Post => String::from("post"),
            Self::Put => String::from("put"),
            Self::Patch => String::from("patch"),
            Self::Delete => String::from("delete"),
            Self::Head => String::from("head"),
            Self::Options => String::from("options"),
        }
    }
}

impl Default for Methods {
    fn default() -> Methods {
        Self::Get
    }
}

