/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// AuthMechanism : An enumeration.
/// An enumeration.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AuthMechanism {
    #[serde(rename = "Bearer")]
    Bearer,
    #[serde(rename = "Basic")]
    Basic,
    #[serde(rename = "Headers")]
    Headers,

}

impl ToString for AuthMechanism {
    fn to_string(&self) -> String {
        match self {
            Self::Bearer => String::from("Bearer"),
            Self::Basic => String::from("Basic"),
            Self::Headers => String::from("Headers"),
        }
    }
}

impl Default for AuthMechanism {
    fn default() -> AuthMechanism {
        Self::Bearer
    }
}

