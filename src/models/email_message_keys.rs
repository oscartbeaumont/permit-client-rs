/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// EmailMessageKeys : An enumeration.
/// An enumeration.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EmailMessageKeys {
    #[serde(rename = "approval_flows_deny")]
    ApprovalFlowsDeny,
    #[serde(rename = "user_management_invite")]
    UserManagementInvite,
    #[serde(rename = "approval_flows_approve")]
    ApprovalFlowsApprove,
    #[serde(rename = "approval_flows_request")]
    ApprovalFlowsRequest,
    #[serde(rename = "test_email")]
    TestEmail,

}

impl ToString for EmailMessageKeys {
    fn to_string(&self) -> String {
        match self {
            Self::ApprovalFlowsDeny => String::from("approval_flows_deny"),
            Self::UserManagementInvite => String::from("user_management_invite"),
            Self::ApprovalFlowsApprove => String::from("approval_flows_approve"),
            Self::ApprovalFlowsRequest => String::from("approval_flows_request"),
            Self::TestEmail => String::from("test_email"),
        }
    }
}

impl Default for EmailMessageKeys {
    fn default() -> EmailMessageKeys {
        Self::ApprovalFlowsDeny
    }
}

