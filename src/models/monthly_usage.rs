/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MonthlyUsage {
    #[serde(rename = "mau", skip_serializing_if = "Option::is_none")]
    pub mau: Option<i32>,
    #[serde(rename = "tenants", skip_serializing_if = "Option::is_none")]
    pub tenants: Option<i32>,
    #[serde(rename = "monthly_tenants", skip_serializing_if = "Option::is_none")]
    pub monthly_tenants: Option<Vec<uuid::Uuid>>,
    #[serde(rename = "month", skip_serializing_if = "Option::is_none")]
    pub month: Option<i32>,
    #[serde(rename = "year", skip_serializing_if = "Option::is_none")]
    pub year: Option<i32>,
}

impl MonthlyUsage {
    pub fn new() -> MonthlyUsage {
        MonthlyUsage {
            mau: None,
            tenants: None,
            monthly_tenants: None,
            month: None,
            year: None,
        }
    }
}

