/*
 * Permit.io API
 *
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Permission {
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    #[serde(rename = "project_id", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<uuid::Uuid>,
    #[serde(rename = "environment_id", skip_serializing_if = "Option::is_none")]
    pub environment_id: Option<uuid::Uuid>,
    #[serde(rename = "object_type")]
    pub object_type: models::MemberAccessObj,
    #[serde(rename = "access_level")]
    pub access_level: models::MemberAccessLevel,
    #[serde(rename = "organization_key", skip_serializing_if = "Option::is_none")]
    pub organization_key: Option<String>,
    #[serde(rename = "project_key", skip_serializing_if = "Option::is_none")]
    pub project_key: Option<String>,
    #[serde(rename = "environment_key", skip_serializing_if = "Option::is_none")]
    pub environment_key: Option<String>,
    #[serde(rename = "organization_name", skip_serializing_if = "Option::is_none")]
    pub organization_name: Option<String>,
    #[serde(rename = "project_name", skip_serializing_if = "Option::is_none")]
    pub project_name: Option<String>,
    #[serde(rename = "environment_name", skip_serializing_if = "Option::is_none")]
    pub environment_name: Option<String>,
}

impl Permission {
    pub fn new(organization_id: uuid::Uuid, object_type: models::MemberAccessObj, access_level: models::MemberAccessLevel) -> Permission {
        Permission {
            organization_id,
            project_id: None,
            environment_id: None,
            object_type,
            access_level,
            organization_key: None,
            project_key: None,
            environment_key: None,
            organization_name: None,
            project_name: None,
            environment_name: None,
        }
    }
}

